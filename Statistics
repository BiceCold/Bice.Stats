#function for geometric mean
Bice.GeometricMean<-function(x) {
  prod(x)^(1/length(x))
meanlogx<-sum(log(x))/length(x)
meanlogx
}

#function for natural anti log
Bice.NaturalAntiLog<-function(x) {
  prod(x)^(1/length(x))
  meanlogx<-sum(log(x))/length(x)
  exp(meanlogy)
  geometric(x)
}

#function for harmonic mean
Bice.HarmonicMean<-function(x) {
  length(x)/sum(1/x)
}

#function for arithmetic mean
Bice.ArithmeticMean<-function(x) {
  sum(x)/length(x)
}

#function to show all means in a summary
Bice.Summary<-function(x) {
 Bice.Titles<-c("Geometric Mean","Natural Anti Log","Harmonic Mean","Arithmetic Mean")
 Bice.Vaules<-c(Bice.GeometricMean(x),Bice.NaturalAntiLog(x),Bice.HarmonicMean(x),Bice.ArithmeticMean(x))
 Bice.Array<-array(c(Bice.Titles,Bice.Vaules), dim = c(length(Bice.Titles),2))
 print(Bice.Array)
}

#function to find degrees of freedom
Bice.DegreesOfFreedom<-function(x) {
  length(x)-1
}

#Variance Ratio Formula Using Means x and y
Bice.VarianceRatio<-function(x,y) {
  if(x>(4*y))     print("Variance is significant")
  else if(y>(x*4)) print("Variance is significant")
  else            print("variance is not significant")
}

#fetches the critical value of F
Bice.CriticalF<-function(x,y,z){
mylm <- lm(x~y, data = z)
myanova <- anova(mylm)
cbind(myanova, 'Critical Value Of F' = qf(1-.05, myanova[1,1], myanova[2,1]))
}
